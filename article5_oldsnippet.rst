
EUDWhile + EUDVariable 응용 2
-----------------------------

한번 이런 문양을 띄워보죠. ::

    *******
    *  *  *
    *  *  *
    *******
    *  *  *
    *  *  *
    *******

.. note::
    너무 당연하긴 한데, DisplayText만으로 출력하려면 이러면 됩니다.

    .. literalinclude:: examples\example43_simple.py

    '''\ ~ ''' 는 여러줄 텍스트라 해요. ' ~ ' 랑 다르게 텍스트 중간에 엔터를
    넣어도 됩니다.


.. note::
    실제 이미지 모양은 이렇지만 봐주세요.

    ..image:: ar5_p4.png

좀 억지스럽긴 하지만 이런 식으로 저 문양을 띄울 수 있습니다.

- 총 7줄이므로 변수 i가 0(*), 1, 2, 3, 4, 5, 6 일때 각각 1, 2, 3, 4, 5, 6, 7
  번째 줄이 출력되도록 합니다.

- i가 0, 3, 6일때는 '*******'를, 나머지 줄에서는 '*  *  *' 를 출력하면 되요.

- 조금 더 보니까 0, 3, 6은 3의 배수네요. :code:`i % 3 == 0` 을 조건으로 쓰면
  i에 따라서 어떻게 줄을 출력해야할지 알 수 있겠네요.

.. note::
    7줄을 출력하는데 왜 i가 1~7이 아니라 0~6인지 이유는 약간 복잡합니다.
    스타에서는 Player 1 = 0, Terran Marine = 0 처럼 많은 경우에 수를 0부터
    셉니다. 예제에서부터 0부터 센다는 개념에 익숙해지려고 i를 0~6으로 한거에요.
    i를 1~7로 해도 별 문제는 없어요.


이런 생각으로 eudplib 코드를 만들면 이렇게 됩니다.

.. literalinclude:: examples\example43.py

이 코드는 대략적으로 이렇게 돌아갑니다.

1.  i라는 변수를 만들고 0을 대입합니다. ::
    
        i = EUDVariable()
        i << 0

2.  반복문을 돕니다. i = 0이니까 i < 7이고, 그래서 반복문 안의 내용도 실행. ::

        if EUDWhile(i < 7):

3.  반복문 안의 내용을 실행합니다. i = 0이니까 mod3 = 0이 되고, mod3 == 0은
    참, mod3 >= 1은 거짓이겠죠. 그래서 :code:`DisplayText('*******')` 가
    실행됩니다. ::

        mod3 = i % 3  # i = 0이므로 mod3 = 0 % 3 = 0이 된다.
        Trigger(
            mod3 == 0,
            DisplayText('*******')  # 이게 실행
        )

        Trigger(
            mod3 >= 1,
            DisplayText('*  *  *')
        )

4.  i에 1을 더합니다. 이제 i는 1이 됬군요. ::

        i += 1  # 이제 i는 1이 됩니다.

5.  EUDEndWhile이네요. 다시 EUDWhile로 올라갑니다. ::

        EUDEndWhile()

6.  i = 1이니까 아직 i < 7은 참이죠. 반복문을 또 실행합니다. ::

        if EUDWhile(i < 7):

7.  i = 1이니까 mod3 = 1, mod3 == 0은 거짓이고 mod3 >= 1은 참이므로
    :code:`DisplayText('*  *  *')` 가 실행됩니다. ::

        mod3 = i % 3  # i = 1이므로 mod3 = 1 % 3 = 1이 된다.
        Trigger(
            mod3 == 0,
            DisplayText('*******')  # 이게 실행
        )

        Trigger(
            mod3 >= 1,
            DisplayText('*  *  *')
        )

8.  다시 i에 1을 더하고 EUDWhile() 로 올라갑니다. ::

            i += 1  # 이제 i는 2가 됩니다.

        EUDEndWhile()

9.  마찬가지 일을 i = 2, 3, 4, 5, 6에 대해 합니다. i = 6일 때 :code:`i += 1` 을
    하면 i가 7이 되겠죠.  ::

            i += 1  # 이제 i는 7이 됩니다.

        EUDEndWhile()  # 다시 EUDWhile로!

10. 이제 i = 7 이니까 i < 7은 거짓이 되겠죠. EUDWhile문을 빠져나갑니다.  ::

        if EUDWhile(i < 7):

EUDWhile 안의 내용이 반복될때마다 어떤 문양이 출력되는지는 다음과 같습니다.


===  ====== =========== =========== ====================
 i    mod3   mod3 == 0   mod3 >= 1          문양
---  ------ ----------- ----------- --------------------

 0      0        O           X       :literal:`*******`
 1      1        X           O       :literal:`*  *  *`
 2      2        X           O       :literal:`*  *  *`
 3      3        O           X       :literal:`*******`
 4      4        X           O       :literal:`*  *  *`
 5      5        X           O       :literal:`*  *  *`
 6      6        O           X       :literal:`*******`

===  ====== =========== =========== ====================

